---
AWSTemplateFormatVersion: 2010-09-09

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
    - Label:
        default: Web Parameters
      Parameters:
        - EC2KeyName
        - WebInstanceType
        - WebAsgMax
        - WebAsgMin
        - WebSecurityGroup
        - NumberOfSubnets
        - Subnet
        - PublicAlbTargetGroupArn
        - PublicAlbHostname
    - Label:
        default: Database Parameters
      Parameters:
        - DatabaseClusterEndpointAddress
        - DatabaseName
        - DatabaseMasterUsername
        - DatabaseMasterPassword
    ParameterLabels:
      DatabaseClusterEndpointAddress:
        default: DB Cluster Endpoint Address
      DatabaseMasterUsername:
        default: DB Master Username
      DatabaseMasterPassword:
        default: DB Master Password
      DatabaseName:
        default: DB Name
      EC2KeyName:
        default: Existing Key Pair
      NumberOfSubnets:
        default: Number of subnets
      PublicAlbTargetGroupArn:
        default: Public Alb Target Group Arn
      PublicAlbHostname:
        default: Public Alb Hostname
      Subnet:
        default: Subnets
      WebAsgMax:
        default: Web ASG Max
      WebAsgMin:
        default: Web ASG Min
      WebInstanceType:
        default: Web Instance Type
      WebSecurityGroup:
        default: Web Security Group

Parameters:
  DatabaseClusterEndpointAddress:
    Description: The RDS cluster endpoint address.
    Type: String
  DatabaseMasterUsername:
    AllowedPattern: ^([a-zA-Z0-9]*)$
    Description: The Amazon RDS master username.
    ConstraintDescription: Must contain only alphanumeric characters and be at least 8 characters.
    MaxLength: 16
    MinLength: 1
    Type: String
  DatabaseMasterPassword:
    AllowedPattern: ^([a-z0-9A-Z`~!#$%^&*()_+,\\-])*$
    ConstraintDescription: Must be letters (upper or lower), numbers, and these special characters '_'`~!#$%^&*()_+,-
    Description: The Amazon RDS master password.
    MaxLength: 41
    MinLength: 8
    NoEcho: true
    Type: String
  DatabaseName:
    AllowedPattern: ^([a-zA-Z0-9]*)$
    Description: The Amazon RDS master database name.
    Type: String
  EC2KeyName:
    AllowedPattern: ^([a-zA-Z0-9 @.`~!#$%^&*()_+,\\-])*$
    ConstraintDescription: Must be letters (upper or lower), numbers, and special characters.
    Description: Name of an EC2 KeyPair. Your bastion & Web instances will launch with this KeyPair.
    Type: AWS::EC2::KeyPair::KeyName
  NumberOfSubnets:
    AllowedValues:
    - 1
    - 2
    Default: 2
    Description: Number of subnets. This must match your selections in the list of subnets below.
    Type: String
  PublicAlbTargetGroupArn:
    Description: The public application load balancer target group arn.
    Type: String
  PublicAlbHostname:
    Description: The hostname of the public ALB http form (e.g. http://abdc-12345-xyz.<region>.elb.amazonaws.com)
    Type: String
  Subnet:
    Description: Select existing subnets. The number selected must match the number of subnets above. Subnets selected must be in separate AZs.
    Type: List<AWS::EC2::Subnet::Id>
  WebAsgMax:
    AllowedPattern: ^((?!0$)[1-2]?[0-9]|30)$
    ConstraintDescription: Must be a number between 1 and 30.
    Default: 4
    Description: Specifies the maximum number of EC2 instances in the Web Autoscaling Group.
    Type: String
  WebAsgMin:
    AllowedPattern: ^([0-0]?[0-9]|10)$
    ConstraintDescription: Must be a number between 0 and 10.
    Default: 2
    Description: Specifies the minimum number of EC2 instances in the Web Autoscaling Group.
    Type: String
  WebInstanceType:
    AllowedValues:
    - t2.nano
    - t2.micro
    - t2.small
    - t2.medium
    - t2.large
    - t2.xlarge
    - t2.2xlarge
    - m3.medium
    - m3.large
    - m3.xlarge
    - m3.2xlarge
    - m4.large
    - m4.xlarge
    - m4.2xlarge
    - m4.4xlarge
    - m4.10xlarge
    - m4.16xlarge
    - m5.large
    - m5.xlarge
    - m5.2xlarge
    - m5.4xlarge
    - m5.12xlarge
    - m5.24xlarge
    - c3.large
    - c3.xlarge
    - c3.2xlarge
    - c3.4xlarge
    - c3.8xlarge
    - c4.large
    - c4.xlarge
    - c4.2xlarge
    - c4.4xlarge
    - c4.8xlarge
    - c5.large
    - c5.xlarge
    - c5.2xlarge
    - c5.4xlarge
    - c5.9xlarge
    - c5.18xlarge
    - r3.large
    - r3.xlarge
    - r3.2xlarge
    - r3.4xlarge
    - r3.8xlarge
    - r4.large
    - r4.xlarge
    - r4.2xlarge
    - r4.4xlarge
    - r4.8xlarge
    - r4.16xlarge
    - x1.16xlarge
    - x1.32xlarge
    - x1e.xlarge
    - x1e.2xlarge
    - x1e.4xlarge
    - x1e.8xlarge
    - x1e.16xlarge
    - x1e.32xlarge
    - d2.xlarge
    - d2.2xlarge
    - d2.4xlarge
    - d2.8xlarge
    - h1.2xlarge
    - h1.4xlarge
    - h1.8xlarge
    - h1.16xlarge
    - i2.xlarge
    - i2.2xlarge
    - i2.4xlarge
    - i2.8xlarge
    - i3.large
    - i3.xlarge
    - i3.2xlarge
    - i3.4xlarge
    - i3.8xlarge
    - i3.16xlarge
    - f1.2xlarge
    - f1.16xlarge
    - g2.2xlarge
    - g2.8xlarge
    - g3.4xlarge
    - g3.8xlarge
    - g3.16xlarge
    - p2.xlarge
    - p2.8xlarge
    - p2.16xlarge
    - p3.2xlarge
    - p3.8xlarge
    - p3.16xlarge
    ConstraintDescription: Must be a valid Amazon EC2 instance type.
    Default: t2.large
    Description: The Amazon EC2 instance type for your web instances.
    Type: String
  WebSecurityGroup:
    Description: Select the web security group.
    Type: AWS::EC2::SecurityGroup::Id

Conditions:
  NumberOfSubnets1:
    !Equals [ 1, !Ref NumberOfSubnets ]

Mappings:
  RegionMap:
    us-east-2:
      AMI: ami-04768381bf606e2b3
    us-east-1:
      AMI: ami-0756fbca465a59a30
    us-west-1:
      AMI: ami-063dd30adbb186909
    us-west-2:
      AMI: ami-07a0c6e669965bb7c
    ap-south-1:
      AMI: ami-0eacc5b7915ba9921
    ap-northeast-2:
      AMI: ami-082b5ca9ff663f3b8
    ap-southeast-1:
      AMI: ami-03097abf0db1cdff2
    ap-southeast-2:
      AMI: ami-05067171f4230ac41
    ap-northeast-1:
      AMI: ami-0ccdbc8c1cb7957be
    ca-central-1:
      AMI: ami-07ab3281411d31d04
    eu-central-1:
      AMI: ami-03a71cec707bfc3d7
    eu-west-1:
      AMI: ami-03c242f4af81b2365
    eu-west-2:
      AMI: ami-05663d374a152d239
    eu-west-3:
      AMI: ami-0f962299dc4d90c81
    eu-north-1:
      AMI: ami-be4bc3c0
    sa-east-1:
      AMI: ami-0eb2a191bf5e40e10

Resources:
  WebInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: /
      Roles:
      - !Ref WebInstanceRole
  WebInstanceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - ec2.amazonaws.com
          Action:
          - sts:AssumeRole
      Path: /
      Policies:
      - PolicyName: logs
        PolicyDocument:
          Version: 2012-10-17
          Statement:
          - Effect: Allow
            Action:
            - logs:CreateLogGroup
            - logs:CreateLogStream
            - logs:PutLogEvents
            - logs:DescribeLogStreams
            Resource:
            - arn:aws:logs:*:*:*
  WebAutoScalingGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      Cooldown: 60
      HealthCheckGracePeriod: 120
      HealthCheckType: ELB
      LaunchConfigurationName:
        !Ref WebLaunchConfiguration
      MaxSize: !Ref WebAsgMax
      MinSize: !Ref WebAsgMin
      Tags:
        - Key: Name
          Value: !Join [ '', [ 'Web ASG / ', !Ref 'AWS::StackName' ] ]
          PropagateAtLaunch: true
      TargetGroupARNs:
        - !Ref PublicAlbTargetGroupArn
      VPCZoneIdentifier:
        !If
          [ NumberOfSubnets1,
          [ !Select [ 0, !Ref Subnet ] ],
          [ !Select [ 0, !Ref Subnet ], !Select [ 1, !Ref Subnet ] ]
          ]
    CreationPolicy:
      ResourceSignal:
        Count: !Ref WebAsgMin
        Timeout: PT5M
  WebLaunchConfiguration:
    Type: AWS::AutoScaling::LaunchConfiguration
    # TODO
    # Add Configsets to install and perform setups
    Properties:
      IamInstanceProfile: !Ref WebInstanceProfile
      ImageId: !FindInMap [ RegionMap, !Ref 'AWS::Region', AMI ]
      InstanceMonitoring: true
      InstanceType: !Ref WebInstanceType
      KeyName: !Ref EC2KeyName
      SecurityGroups:
      - !Ref WebSecurityGroup
      UserData:
        "Fn::Base64":
          !Sub |
            #!/bin/bash -xe
            yum update -y
            # /opt/aws/bin/cfn-init --configsets {{Configset Name}} --verbose --stack ${AWS::StackName} --resource WebLaunchConfiguration --region ${AWS::Region}
            /opt/aws/bin/cfn-signal --exit-code $? --stack ${AWS::StackName} --resource WebAutoScalingGroup --region ${AWS::Region}
#
#
# Outputs:
#   Opcachestatus:
#     Value: !Join [ '', [ !Ref PublicAlbHostname, '/opcache-instanceid.php' ] ]
